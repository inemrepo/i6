<% block('localScripts', '') %>

<% block('localCSS', '<link rel="stylesheet" href="/plugins/datatables/datatables.min.css">') %>

<% block('localScripts', '<script src="/plugins/datatables/datatables.min.js"></script>') %>

<!-- FLOT CHARTS -->
<!-- FLOT RESIZE PLUGIN - allows the chart to redraw when the window is resized -->
<% block('localScripts', '<script src="/adm/bower_components/Flot/jquery.flot.js"></script>') %>
<!-- FLOT PIE PLUGIN - also used to draw donut charts -->
<% block('localScripts', '<script src="/adm/bower_components/Flot/jquery.flot.resize.js"></script>') %>
<% block('localScripts', '<script src="/adm/bower_components/Flot/jquery.flot.time.js"></script>') %>
<!-- FLOT CATEGORIES PLUGIN - Used to draw bar charts -->
<% block('localScripts', '<script src="/adm/bower_components/Flot/jquery.flot.categories.js"></script>') %>
<!-- FLOT CATEGORIES PLUGIN - Used to draw bar charts -->
<% block('localScripts', '<script src="/adm/bower_components/Flot/jquery.flot.cursor.js"></script>') %>

<div class="row">
    <div class="col-xs-12">
      <!-- interactive chart -->
      <div class="box box-primary">
        <div class="box-header with-border">
            <i class="fa fa-bar-chart-o"></i>
            <h3 class="box-title">Historycal Trend</h3>
        </div>
        <div class="box-body">
          <div class="col-md-12">
              <div id="placeholder" style="height: 300px;"></div>              
          </div>
          <div class="col-md-12">
            <button class="btn btn-primary active"><i class="fa fa-play"></i></button>
            <button class="btn btn-default"><i class="fa fa-pause"></i></button>
            <button class="btn btn-default"><i class="fa fa-stop"></i></button>
          </div>
        </div>
        <!-- /.box-body-->

        <div class="box-footer">
          <div class="col-md-12">
            <table id="chartlegend" class="table table-striped table-bordered" cellspacing="0" width="100%">
              <thead>
                <tr>
                  <th></th>
                  <th>Tag</th>
                  <th>Description</th>
                  <th>Value</th>
                  <th>Unit</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td><i class="fa fa-window-minimize text-yellow"></i></td>
                  <td>HRSG1_CO2_OUT</td>
                  <td>CO2</td>
                  <td>212.67</td>
                  <td>mg/Nm3</td>
                </tr>
                <tr>
                  <td><i class="fa fa-window-minimize text-primary"></i></td>
                  <td>HRSG1_OPACITY_OUT</td>
                  <td>OPACITY</td>
                  <td>212.67</td>
                  <td>mg/Nm3</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <!-- /.box -->

    </div>
    <!-- /.col -->
    </div>
    <!-- /.row -->


<!-- <script>
    function onViewLoaded(){

        $(function () {
            /*
             * Flot Interactive Chart
             * -----------------------
             */
            // We use an inline data source in the example, usually data would
            // be fetched from a server
            var data = [], totalPoints = 100;
        
            function getRandomData() {
        
              if (data.length > 0)
                data = data.slice(1)
        
              // Do a random walk
              while (data.length < totalPoints) {
        
                var prev = data.length > 0 ? data[data.length - 1] : 50,
                    y    = prev + Math.random() * 10 - 5
        
                if (y < 0) {
                  y = 0
                } else if (y > 100) {
                  y = 100
                }
        
                data.push(y)
              }
        
              // Zip the generated y values with the x values
              var res = []
              for (var i = 0; i < data.length; ++i) {
                  var x = new Date();
                res.push([x, data[i]])
              }
        
              return res
            }
        
            var interactive_plot = $.plot('#interactive', [getRandomData()], {
              grid  : {
                borderColor: '#f3f3f3',
                borderWidth: 1,
                tickColor  : '#f3f3f3'
              },
              series: {
                shadowSize: 0, // Drawing is faster without shadows
                color     : '#3c8dbc'
              },
              lines : {
                fill : true, //Converts the line chart to area chart
                color: '#3c8dbc'
              },
              yaxis : {
                min : 0,
                max : 100,
                show: true
              },
              xaxis : {
                show : true,
                mode: "time",
                timeformat: "%I:%M:%S"
              }
            })
        
            var updateInterval = 500 //Fetch data ever x milliseconds
            var realtime       = 'on' //If == to on then fetch data every x seconds. else stop fetching
            function update() {
        
              interactive_plot.setData([getRandomData()])
        
              // Since the axes don't change, we don't need to call plot.setupGrid()
              interactive_plot.draw()
              if (realtime === 'on')
                setTimeout(update, updateInterval)
            }
        
            //INITIALIZE REALTIME DATA FETCHING
            if (realtime === 'on') {
              update()
            }
            //REALTIME TOGGLE
            $('#realtime .btn').click(function () {
              if ($(this).data('toggle') === 'on') {
                realtime = 'on'
              }
              else {
                realtime = 'off'
              }
              update()
            })
            /*
             * END INTERACTIVE CHART
             */
    });
}
</script> -->

<script type="text/javascript">
function onViewLoaded(){    
    function getData(){
        var i=0;
        var data = [];
        var data1 = [];
        setInterval(function(){
            var y = Math.random() * 500;
            var x = moment().toDate().getTime();
            if(data.length>120){
                data.splice(0,1);
                data1.splice(0,1);
            }
            data.push([x,y]);
            data1.push([x,Math.random() * 100]);
            var sekarang = new Date();

            $.plot("#placeholder", [data,data1], {
                xaxis: {
                    mode: "time",
                    minTickSize: [1, "second"],
                    min:moment().subtract(60, 'seconds') ,
                    max: moment(),
                    timezone : 'browser',
                    twelveHourClock: true
                }
            });

            // var dt = {where : {
            //     'createdAt' : {
            //         '<' : moment().subtract(1, 'minutes').toDate(),
            //         '>' : moment().sub
            //     }
            // }};
            // $.get('/i6taglog', dt,function(res,status){
            //     console.log(res);
            // } );

        }, 500);      
    }
    getData();

    $('table#chartlegend').DataTable({dom:'t'});


        
}
</script>